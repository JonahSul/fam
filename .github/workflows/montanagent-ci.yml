name: MontaNAgent CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'mobile_app/montanagent/**'
      - '.github/workflows/montanagent-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'mobile_app/montanagent/**'
      - '.github/workflows/montanagent-ci.yml'
  workflow_dispatch:

jobs:
  analyze:
    name: Analyze & Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'
          channel: 'stable'
          cache: true

      - name: Get dependencies
        working-directory: mobile_app/montanagent
        run: flutter pub get

      - name: Verify formatting
        working-directory: mobile_app/montanagent
        run: dart format --output=none --set-exit-if-changed .

      - name: Analyze code
        working-directory: mobile_app/montanagent
        run: flutter analyze

      - name: Run tests
        working-directory: mobile_app/montanagent
        run: flutter test

  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    needs: analyze
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'
          channel: 'stable'
          cache: true

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Get dependencies
        working-directory: mobile_app/montanagent
        run: flutter pub get

      - name: Create .env file
        working-directory: mobile_app/montanagent
        run: |
          cat > .env << EOF
          GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
          ENABLE_ANALYTICS=true
          ENABLE_DEBUG_LOGGING=false
          EOF

      - name: Build APK
        working-directory: mobile_app/montanagent
        run: flutter build apk --release

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: mobile_app/montanagent/build/app/outputs/flutter-apk/app-release.apk
          retention-days: 30

  build-ios:
    name: Build iOS App
    runs-on: macos-latest
    needs: analyze
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'
          channel: 'stable'
          cache: true

      - name: Get dependencies
        working-directory: mobile_app/montanagent
        run: flutter pub get

      - name: Create .env file
        working-directory: mobile_app/montanagent
        run: |
          cat > .env << EOF
          GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
          ENABLE_ANALYTICS=true
          ENABLE_DEBUG_LOGGING=false
          EOF

      - name: Build iOS (no code signing)
        working-directory: mobile_app/montanagent
        run: flutter build ios --release --no-codesign

  build-web:
    name: Build & Deploy Web
    runs-on: ubuntu-latest
    needs: analyze
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'
          channel: 'stable'
          cache: true

      - name: Get dependencies
        working-directory: mobile_app/montanagent
        run: flutter pub get

      - name: Create .env file
        working-directory: mobile_app/montanagent
        run: |
          cat > .env << EOF
          GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
          ENABLE_ANALYTICS=true
          ENABLE_DEBUG_LOGGING=false
          EOF

      - name: Build web
        working-directory: mobile_app/montanagent
        run: flutter build web --release

      - name: Deploy to Firebase Hosting
        if: success()
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          projectId: '${{ secrets.FIREBASE_PROJECT_ID }}'
          channelId: live
          entryPoint: mobile_app/montanagent
