name: 🎭 Staging & Preview Deployments

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'mobile_app/montanagent/**'
      - '.github/workflows/**'
    types: [opened, synchronize, reopened, closed]

permissions:
  contents: read
  checks: write
  statuses: write
  deployments: write
  pull-requests: write

env:
  FLUTTER_VERSION: '3.35.4'
  WORKING_DIRECTORY: ./mobile_app/montanagent

jobs:
  # Stage 1: Build and Test (ONCE)
  build-and-test:
    name: 🏗️ Build & Test
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    outputs:
      build-success: ${{ steps.build.outcome }}
      test-success: ${{ steps.test.outcome }}
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    
    steps:
      - name: 📚 Checkout repository
        uses: actions/checkout@v4

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: 📦 Install dependencies
        run: flutter pub get

      - name: 🔍 Verify formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: 🕵️ Analyze project source
        run: flutter analyze --fatal-infos

      - name: 🧪 Run tests
        id: test
        run: flutter test --coverage --test-randomize-ordering-seed random

      - name: 🏗️ Build web for deployment
        id: build
        run: |
          flutter build web \
            --release \
            --wasm \
            --dart-define=ENVIRONMENT=preview \
            --dart-define=API_BASE_URL=https://api-staging.montanagent.com

      - name: 📦 Upload build artifacts
        uses: actions/upload-artifact@v4
        if: steps.build.outcome == 'success'
        with:
          name: web-build-${{ github.sha }}
          path: ${{ env.WORKING_DIRECTORY }}/build/web
          retention-days: 7

  # Stage 2: Deploy Preview (Uses build artifact)
  deploy-preview:
    name: 🚀 Deploy Preview
    runs-on: ubuntu-latest
    needs: build-and-test
    if: needs.build-and-test.outputs.build-success == 'success'
    outputs:
      preview-url: ${{ steps.deploy.outputs.url }}
      details-url: ${{ steps.deploy.outputs.details_url }}
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    
    steps:
      - name: 🔍 Debug job conditions
        working-directory: .
        run: |
          echo "Build success output: ${{ needs.build-and-test.outputs.build-success }}"
          echo "Test success output: ${{ needs.build-and-test.outputs.test-success }}"
          echo "Build/test result: ${{ needs.build-and-test.result }}" 
          
      - name: �📚 Checkout repository
        uses: actions/checkout@v4

      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: web-build-${{ github.sha }}
          path: ${{ env.WORKING_DIRECTORY }}/build/web

# ...existing code...
      - name: 🚀 Deploy to Firebase Preview
        id: deploy
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          projectId: '${{ secrets.FIREBASE_PROJECT_ID }}'
          channelId: preview-${{ github.event.number || github.ref_name }}
          expires: 7d
          entryPoint: ${{ env.WORKING_DIRECTORY }}

      - name: 📋 Save deployment info
        run: |
          echo "## 🚀 Deployment Information" >> $GITHUB_STEP_SUMMARY
          echo "Preview URL: ${{ steps.deploy.outputs.url }}" >> $GITHUB_STEP_SUMMARY
          echo "Details URL: ${{ steps.deploy.outputs.details_url }}" >> $GITHUB_STEP_SUMMARY
          echo "Channel ID: preview-${{ github.event.number || github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "DEBUG: Deploy step outputs:"
          echo "url=${{ steps.deploy.outputs.url }}"
          echo "details_url=${{ steps.deploy.outputs.details_url }}"

  # Stage 3: Quality Assurance (Parallel tests on deployed preview)
  visual-testing:
    name: 👁️ Visual Testing
    runs-on: ubuntu-latest
    needs: [build-and-test, deploy-preview]
    if: needs.deploy-preview.result == 'success'
    
    steps:
      - name: 📚 Checkout repository
        uses: actions/checkout@v4

      - name: 🌐 Setup Node.js for Playwright
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: 📦 Install Playwright
        run: |
          npm ci
          npx playwright install --with-deps

      - name: 🎭 Run visual tests
        env:
          PREVIEW_URL: ${{ needs.deploy-preview.outputs.preview-url }}
        run: |
          echo "🔍 Testing URL: $PREVIEW_URL"
          
          cat > visual-test.js << EOF
          const { chromium } = require('playwright');
          
          (async () => {
            const browser = await chromium.launch();
            const page = await browser.newPage();
            
            try {
              console.log('🌐 Navigating to: $PREVIEW_URL');
              
              await page.goto('$PREVIEW_URL', { 
                waitUntil: 'networkidle',
                timeout: 30000 
              });
              
              await page.waitForTimeout(5000);
              
              await page.screenshot({ 
                path: 'preview-screenshot.png', 
                fullPage: true 
              });
              
              console.log('✅ Visual test completed successfully');
            } catch (error) {
              console.error('❌ Visual test failed:', error.message);
              process.exit(1);
            } finally {
              await browser.close();
            }
          })();
          EOF
          
          node visual-test.js

      - name: 📤 Upload screenshot
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: visual-test-${{ github.sha }}
          path: preview-screenshot.png
          retention-days: 7

  performance-testing:
    name: ⚡ Performance Testing
    runs-on: ubuntu-latest
    needs: [build-and-test, deploy-preview]
    if: needs.deploy-preview.result == 'success'
    
    steps:
      - name: 📚 Checkout repository
        uses: actions/checkout@v4

      - name: 🌐 Setup Node.js for Lighthouse
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: 📦 Install Lighthouse CI
        run: npm install -g @lhci/cli

      - name: 🏃 Run Lighthouse audit
        env:
          PREVIEW_URL: ${{ needs.deploy-preview.outputs.preview-url }}
        run: |
          echo "🔍 Running Lighthouse audit on: $PREVIEW_URL"
          
          lhci collect \
            --url="$PREVIEW_URL" \
            --numberOfRuns=3
          
          lhci upload \
            --target=temporary-public-storage

      - name: 📊 Performance summary
        run: |
          echo "## ⚡ Performance Audit Results" >> $GITHUB_STEP_SUMMARY
          echo "Preview URL: ${{ needs.deploy-preview.outputs.preview-url }}" >> $GITHUB_STEP_SUMMARY
          echo "Lighthouse audit completed with 3 runs for accuracy." >> $GITHUB_STEP_SUMMARY

  # Stage 4: Deploy to Staging (Only on develop branch)
  deploy-staging:
    name: 🎭 Deploy to Staging
    runs-on: ubuntu-latest
    needs: [build-and-test, visual-testing, performance-testing]
    if: (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/issue3') && github.event_name == 'push'
    environment:
      name: staging
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    
    steps:
      - name: 📚 Checkout repository
        uses: actions/checkout@v4

      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: web-build-${{ github.sha }}
          path: ${{ env.WORKING_DIRECTORY }}/build/web

      - name: 🚀 Deploy to Firebase Staging
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          projectId: '${{ secrets.FIREBASE_PROJECT_ID }}'
          channelId: live
          entryPoint: ${{ env.WORKING_DIRECTORY }}

  # Comment on PR with preview info
  pr-comment:
    name: 💬 PR Preview Comment
    runs-on: ubuntu-latest
    needs: [deploy-preview, visual-testing, performance-testing]
    if: always() && github.event_name == 'pull_request' && needs.deploy-preview.result == 'success'
    
    steps:
      - name: 💬 Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('🎭 Preview Deployment')
            );
            
            const commentBody = `## 🎭 Preview Deployment
            
            | 📊 **Status** | ✅ **Ready** |
            |---|---|
            | 🌐 **Preview URL** | [${{ needs.deploy-preview.outputs.preview-url }}](${{ needs.deploy-preview.outputs.preview-url }}) |
            | 🎯 **Environment** | Preview |
            | 🔄 **Auto-refresh** | 7 days |
            | 📱 **Platform** | Web |
            
            ### 🧪 Test Results
            - ✅ Build successful
            - ✅ Visual regression testing completed
            - ✅ Performance audit completed
            
            ### 📝 Instructions
            1. Click the preview URL to test the changes
            2. The preview will auto-update on new commits
            3. Preview expires in 7 days
            
            <sub>⚡ Generated by GitHub Actions</sub>`;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: commentBody
              });
            }

  # Cleanup preview on PR close
  cleanup-preview:
    name: 🧹 Cleanup Preview
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    
    steps:
      - name: 📚 Checkout repository
        uses: actions/checkout@v4

      - name: 🧹 Delete preview channel
        run: |
          # Install Firebase CLI
          npm install -g firebase-tools
          
          # Setup credentials
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}' > firebase-key.json
          export GOOGLE_APPLICATION_CREDENTIALS=firebase-key.json
          
          # Delete preview channel
          firebase use ${{ secrets.FIREBASE_PROJECT_ID }}
          firebase hosting:channel:delete preview-${{ github.event.number }} --force || true

      - name: 💬 Update PR comment
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('🎭 Preview Deployment')
            );
            
            if (botComment) {
              const updatedBody = botComment.body.replace(
                '| 📊 **Status** | ✅ **Ready** |',
                '| 📊 **Status** | 🗑️ **Cleaned up** |'
              );
              
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: updatedBody + '\n\n> ✅ Preview environment cleaned up after PR closure.'
              });
            }

  # Staging environment health check
  staging-health-check:
    name: 🏥 Staging Health Check
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    
    steps:
      - name: 🏥 Check staging health
        run: |
          STAGING_URL="https://${{ secrets.FIREBASE_PROJECT_ID }}.web.app"
          
          # Wait for deployment
          sleep 30
          
          # Check health
          HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" "$STAGING_URL")
          
          if [ "$HTTP_CODE" != "200" ]; then
            echo "❌ Staging health check failed. HTTP code: $HTTP_CODE"
            exit 1
          fi
          
          echo "✅ Staging environment is healthy"
          echo "🌐 Staging URL: $STAGING_URL" >> $GITHUB_STEP_SUMMARY
          firebase use ${{ secrets.FIREBASE_PROJECT_ID }}
          firebase hosting:channel:delete preview-${{ github.event.number }} --force || true

      - name: 💬 Update PR comment
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('🎭 Preview Deployment')
            );
            
            if (botComment) {
              const updatedBody = botComment.body.replace(
                '| 📊 **Status** | ✅ **Ready** |',
                '| 📊 **Status** | 🗑️ **Cleaned up** |'
              );
              
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: updatedBody + '\n\n> ✅ Preview environment cleaned up after PR closure.'
              });
            }
